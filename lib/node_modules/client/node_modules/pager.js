module.exports = Pager;

function Pager (options) {
    this.pagesDisplayCount = 10;
    this.page2url = function (page) { return page; }

    mix(this, options);

    this.container = $('<div class=pagination>');
    this._list = $('<ul>');
    this.container.append(this._list);
}

Pager.prototype.setPage = function (number, pagesCount) {
    this._list.empty();
    if (pagesCount < 2) return;

    var start = Math.max(
        Math.min(
            number - Math.floor(this.pagesDisplayCount / 2), 
            pagesCount - this.pagesDisplayCount + 1
        ),
        1
    );
    var end = Math.min(start + this.pagesDisplayCount - 1, pagesCount);
    
    this._addPrevLink(number);

    for (var i = start; i <= end; i++) {
        this._addLink({
            text: i,
            href: this.page2url(i),
            isActive: i == number,
            isDisabled: false
        });
    }

    this._addNextLink(number, pagesCount);
}

Pager.prototype._addPrevLink = function (currentPage) {
    var prevPage = currentPage - 1;
    var href;
    var isDisabled;

    if (prevPage < 1) {
        href = '#';
        isDisabled = true;
    }
    else {
        href = this.page2url(prevPage);
        isDisabled = false;
    }
    this._addLink({
        text: '\u2190',
        href: href,
        isDisabled: isDisabled,
        isActive: false
    });
}

Pager.prototype._addNextLink = function (currentPage, pagesCount) {
    if (currentPage == pagesCount) return;
    var nextPage = currentPage + 1;
    this._addLink({
        text: '\u2192',
        href: this.page2url(nextPage),
        isDisabled: false,
        isActive: false
    });
}

Pager.prototype._addLink = function (l) {
    var link = $('<li>')
        .append(
            $('<a>').attr('href', l.href).text(l.text)
        )
        .toggleClass('active', l.isActive)
        .toggleClass('disabled', l.isDisabled)
        .appendTo(this._list);
}

function mix (target, src) {
    for (var key in src) {
        target[key] = src[key];
    }
}
