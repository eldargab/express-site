module.exports = Page;

function Page (el, url) {
    this.el = el;
    this.url = url;
    this._destroyed = false;
}

Page.prototype.load = function () {
    var p = this;
    this.$().load(p.url, function () {
        if (p._destroyed) return;
        p.init();
    });
}

Page.prototype.init = function () {
    var p = this;
    var params = {};
    if (p.el.firstChild && p.el.firstChild.nodeType == Node.COMMENT_NODE) {
        try {
            params = JSON.parse(p.el.firstChild.textContent);
        }
        catch (e) {}
    }

    this.params = params;

    var title = params.title;
    var bootstrap = params.bootstrap;

    if (title) {
        require('browser').setTitle(require('params').site.title + ' - ' + title);
    }

    if (bootstrap) {
        require([params.bootstrap], function () {
            require(params.bootstrap)(p);
        });
    }
    else {
        p._show();
    }
}

Page.prototype.close = function () {
    var p = this;
    p._hidden = true;
    p._hide();
    var isNotSuspended = !p.onsuspend();
    if (isNotSuspended) {
        p.ondestroy();
        p._destroyed = true;
        p.$().remove();
    }
    return p._destroyed;
}

Page.prototype.resume = function () {
    this.onresume();
}

Page.prototype._show = function () {
    if (this._hidden) return;
    this.$().show();
}

Page.prototype._hide = function () {
    this.$().hide(); 
}

Page.prototype.$ = function (selector) {
    return selector ? $(selector, this.el) : $(this.el);
}

Page.prototype.onsuspend = function () {
    return false;
}

Page.prototype.onresume = function () {
    this._hidden = false;
    this._show();
}

Page.prototype.ondestroy = function () {
}
