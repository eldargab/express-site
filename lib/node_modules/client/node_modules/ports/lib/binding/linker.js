var P = require('../port');

module.exports = function (target) {
    return function link (path, port) {
        var segs =  path.split(/\./g);
        var lastSeg = segs.length - 1;
        var t = target;

        segs.forEach(function (seg, index) {
            var isLast = index == lastSeg;
            if (isLast) {
                t[seg] = bind(port, t[seg]);
            }
            else {
                t = t[seg] || (t[seg] = {})
            }
        });
    }
}

function bind (port, target) {
    if (!target) return port;
    if (typeof target != 'function') return extend(port, target);

    // Dom ports typicaly do not trigger change events when their values
    // where changed from script. So, it's safe to reset them within onchange event handlers.
    // We establish special case two way link here where source dom port is updated on
    // every target's change event. It is useful because we can automatically reformat
    // display valye to it's canonical form or present actual result of user input
    if (!target.on) {
        P.link(port, target);
    }
    else if (!port.on) {
       P.link(target, port);
    }
    else {
        port(target());
        port.addListener(function () {
            target(port());
        });
        target.addListener(function () {
            port(target());
        });
    }
    return target;
}

function extend (target, src) {
    for (var key in src) {
        target[key] = src[key];
    }
    return target;
}
