var P = require('./port');

module.exports = function propertyPort (initialValue) {
    var events = Object.create(Backbone.Events);
    var _val = initialValue;

    var setHook = passThrough;
    var getHook = passThrough;
    
    var p = P.createListenable(
        function setter (val) {
            try {
                val = setHook(val);
            }
            catch (e) {
                return;
            }
            if (_val === val) return;
            _val = val;
            events.trigger('change');
        },
        function getter () {
            return getHook(_val);
        },
        events
    );

    p.hookSetter = function (hook) {
        setHook = Hook(setHook, hook);
        return p;
    }

    p.hookGetter = function (hook) {
        getHook = Hook(getHook, hook);
        return p;
    }

    p.mix = function (fn) {
        fn(p);
        return p;
    }

    return p;
}

function Hook (fn, hook) {
    return function (val) {
        return fn(hook(val));   
    }
}

function passThrough (val) {
    return val;
}
