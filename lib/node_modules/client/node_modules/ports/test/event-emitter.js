var should = require('should');
var sinon = require('sinon');
var EventEmitter = require('../lib/event-emitter');

describe('event-emitter', function () {
    var ee, l1, l2, l3;

    beforeEach(function () {
        ee = new EventEmitter;
        l1 = sinon.spy();
        l2 = sinon.spy();
        l3 = sinon.spy();
    });

    it('test subscription', function () {
        ee.addListener('change', l1);

        ee.emit('event');
        l1.called.should.be.false;

        ee.emit('change');
        l1.calledWithExactly().should.be.true;

        ee.emit('change', 1);
        l1.calledWithExactly(1).should.be.true;

        ee.emit('change', 1, 2)
        l1.calledWithExactly(1, 2).should.be.true;

        ee.on('change', l2);

        ee.emit('change', 1, 2, 3);
        l1.calledWithExactly(1, 2, 3).should.be.true;
        l2.calledWithExactly(1, 2, 3).should.be.true;
    });

    it('test removeListener()', function () {
        ee.on('ev', l1);
        ee.on('ev', l2);
        ee.on('ev', l3);

        ee.removeListener('ev', l2);
        ee.emit('ev');
        l2.called.should.be.false;
    });

    it('test removeListeners() for event', function () {
        ee.on('ev', l1);
        ee.on('ev', l2);
        ee.removeAllListeners('ev');
        ee.emit('ev');
        l1.called.should.be.false;
        l2.called.should.be.false;
    });

    it('test removeAllListeners() for all events', function () {
        ee.on('ev', l1).on('ev', l2).on('ev2', l3);
        ee.removeAllListeners();
        ee.emit('ev');
        ee.emit('ev2');
        l1.called.should.be.false;
        l2.called.should.be.false;
        l3.called.should.be.false;
    });
});
