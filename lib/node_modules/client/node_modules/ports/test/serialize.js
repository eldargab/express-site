var should = require('should');
var P = require('..');

function property (val) {
    return P.create(
        function setter () {},
        function getter () {
            return val;
        }
    );
}

describe('serialize()', function () {
    it('Creates a deep copy of src object ignoring all functions except ports. For ports it serializes their values', function () {
        var obj = {
            name: 'Eldar',
            port: property(true),
            itIsNull: null,
            fn: function () { return 'Hello' },
            msg: {
                type: property('success'),
                text: 'msg text'
            },
            array: [10, { low: 20, high: 30}]
        }
        var res = P.serialize(obj);
        
        res.should.eql({
            name: 'Eldar',
            port: true,
            itIsNull: null,
            msg: {
                type: 'success',
                text: 'msg text'
            },
            array: [10, { low: 20, high: 30 }]
        });

        res.array[1].should.not.equal(obj.array[1]);
        res.msg.should.not.equal(obj.msg);
    });    

    it('If object has toJSON() method it`s result used as a serialized value', function () {
        var obj = {
            _array: [1, 2],
            toJSON: function () {
                return this._array;
            }
        }

        P.serialize(obj).should.equal(obj._array);
    });
});
